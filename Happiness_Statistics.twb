<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Happiness_DataSet' inline='true' name='federated.0pyli041wzq9mf1evm5ei138f2xo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Happiness_Statistics' name='excel-direct.0q02ogq1782dnq15ya9zi03qg9h1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Eva/Desktop/Happiness_Statistics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0q02ogq1782dnq15ya9zi03qg9h1' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K101:no:A1:K101:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Happiness Rank' ordinal='2' />
            <column datatype='real' name='Happiness Score' ordinal='3' />
            <column datatype='real' name='Economy (GDP per Capita)' ordinal='4' />
            <column datatype='real' name='Family' ordinal='5' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='6' />
            <column datatype='real' name='Freedom' ordinal='7' />
            <column datatype='real' name='Trust' ordinal='8' />
            <column datatype='real' name='Generosity' ordinal='9' />
            <column datatype='real' name='Dystopia Residual' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness Rank]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Happiness Rank</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Economy (GDP per Capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Economy (GDP per Capita)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Economy (GDP per Capita)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Family</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Family]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Family</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trust</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trust]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Trust</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia Residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia Residual]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Dystopia Residual</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K101:no:A1:K101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Columbia&quot;' value='&quot;Colombia&quot;' />
          <semantic-value key='&quot;Luxemborg&quot;' value='&quot;Luxembourg&quot;' />
          <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
          <semantic-value key='&quot;Somaliland&quot;' value='&quot;Somalia&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Family]' role='measure' type='quantitative' />
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Trust]' role='measure' type='quantitative' />
      <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Family]' derivation='Sum' name='[sum:Family:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Trust]' derivation='Sum' name='[sum:Trust:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.264122' measure-ordering='alphabetic' measure-percentage='0.735878' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Economy (GDP per Capita):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Trust:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Family:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Countries &amp; Their Happiness Ranking'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Countries &amp; Their Happiness Ranking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Happiness_DataSet' name='federated.0pyli041wzq9mf1evm5ei138f2xo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pyli041wzq9mf1evm5ei138f2xo'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Columbia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Luxemborg&quot;' value='&quot;Luxembourg&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[Longitude (generated)]' field-type='quantitative' max='26196572.730438955' min='-26196572.730438959' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[Latitude (generated)]' field-type='quantitative' max='15477607.816393994' min='-15477607.816393998' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Score:qk]' />
              <geometry column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pyli041wzq9mf1evm5ei138f2xo].[Latitude (generated)]</rows>
        <cols>[federated.0pyli041wzq9mf1evm5ei138f2xo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0C969A13-510A-4522-94D7-7C2268F1A8D6}' />
    </worksheet>
    <worksheet name='Happiness Scores by World Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Happiness Scores by World Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Happiness_DataSet' name='federated.0pyli041wzq9mf1evm5ei138f2xo' />
          </datasources>
          <datasource-dependencies datasource='federated.0pyli041wzq9mf1evm5ei138f2xo'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Columbia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Luxemborg&quot;' value='&quot;Luxembourg&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Happiness Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Rank]' derivation='Sum' name='[sum:Happiness Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Score:qk]' field-type='quantitative' max='7.7423007901668113' min='4.7186992098331872' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Region:nk]' value='121' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='boxplot-style' id='refline0' value='modern' />
            <format attr='fill-color' id='refline0' value='#e9edf5d9' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='whisker-stroke-size' id='refline0' value='1' />
            <format attr='whisker-stroke-color' id='refline0' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#26556a' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Score:qk]</rows>
        <cols>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{0B41B5D5-8897-4D98-A3AC-1E93D53F4F48}' />
    </worksheet>
    <worksheet name='Six Factors of Happiness &amp; the Happiest Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Six Factors of Happiness &amp; the Happiest Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Happiness_DataSet' name='federated.0pyli041wzq9mf1evm5ei138f2xo' />
          </datasources>
          <datasource-dependencies datasource='federated.0pyli041wzq9mf1evm5ei138f2xo'>
            <column aggregation='None' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Columbia&quot;' value='&quot;Colombia&quot;' />
                <semantic-value key='&quot;Luxemborg&quot;' value='&quot;Luxembourg&quot;' />
                <semantic-value key='&quot;North Cyprus&quot;' value='&quot;Northern Cyprus&quot;' />
                <semantic-value key='&quot;Somaliland&quot;' value='&quot;Somalia&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Economy (GDP per Capita)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Family]' role='measure' type='quantitative' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Trust]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Economy (GDP per Capita)]' derivation='Sum' name='[sum:Economy (GDP per Capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Family]' derivation='Sum' name='[sum:Family:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Trust]' derivation='Sum' name='[sum:Trust:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Economy (GDP per Capita):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Family:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Health (Life Expectancy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Trust:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]</column>
            <column>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]' value='99' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Generosity:qk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Freedom:qk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Family:qk]' />
              <lod column='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Trust:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pyli041wzq9mf1evm5ei138f2xo].[Multiple Values]</rows>
        <cols>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{70450135-BE84-4B6F-822C-863EA8B60C3B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1700' minheight='800' minwidth='1700' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='99058' x='471' y='1000'>
            <zone fixed-size='460' h='98000' id='5' is-fixed='true' type='layout-basic' w='27059' x='471' y='1000'>
              <zone h='83375' id='3' name='Countries &amp; Their Happiness Ranking' w='27059' x='471' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='59' h='14625' id='8' is-fixed='true' name='Countries &amp; Their Happiness Ranking' pane-specification-id='0' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' type='color' w='27059' x='471' y='84375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1064' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='62588' x='27530' y='1000'>
              <zone h='51125' id='9' name='Happiness Scores by World Region' w='62588' x='27530' y='1000'>
                <layout-cache cell-count-w='10' minheight='217' non-cell-size-w='83' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='305' h='39125' id='10' is-fixed='true' name='Six Factors of Happiness &amp; the Happiest Countries' w='62588' x='27530' y='52125'>
                <layout-cache cell-count-w='10' minheight='217' non-cell-size-w='72' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='54' h='7750' id='11' is-fixed='true' name='Six Factors of Happiness &amp; the Happiest Countries' pane-specification-id='5' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]' type='color' w='62588' x='27530' y='91250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type='layout-flow' w='99058' x='471' y='1000'>
                <zone fixed-size='280' h='83375' id='3' is-fixed='true' name='Countries &amp; Their Happiness Ranking' w='27059' x='471' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='14625' id='8' name='Countries &amp; Their Happiness Ranking' pane-specification-id='0' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' type='color' w='27059' x='471' y='84375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51125' id='9' is-fixed='true' name='Happiness Scores by World Region' w='62588' x='27530' y='1000'>
                  <layout-cache cell-count-w='10' minheight='217' non-cell-size-w='83' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39125' id='10' is-fixed='true' name='Six Factors of Happiness &amp; the Happiest Countries' w='62588' x='27530' y='52125'>
                  <layout-cache cell-count-w='10' minheight='217' non-cell-size-w='72' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='54' h='7750' id='11' name='Six Factors of Happiness &amp; the Happiest Countries' pane-specification-id='5' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]' type='color' w='62588' x='27530' y='91250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F352625E-3B91-4125-B37F-1F1540683AF0}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Countries &amp; Their Happiness Ranking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Happiness Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4272B6B-9AA3-4332-8B49-96005521DE46}' />
    </window>
    <window class='worksheet' name='Happiness Scores by World Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]</field>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{294761F1-A60B-42E5-B91E-C6107570EA03}' />
    </window>
    <window class='worksheet' name='Six Factors of Happiness &amp; the Happiest Countries'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]</field>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[none:Country:nk]</field>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Freedom:qk]</field>
            <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[sum:Generosity:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DE402013-5573-469B-88EC-7A793DEEED60}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Countries &amp; Their Happiness Ranking'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Happiness Scores by World Region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Six Factors of Happiness &amp; the Happiest Countries'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0pyli041wzq9mf1evm5ei138f2xo].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C863777D-888D-42C6-B5FC-13FA73DA45AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries &amp; Their Happiness Ranking' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3gUV7bo+6vq3K1utXJAEighcjBB2DhgG+c09jgOtscejz3hHN+J58zM
      m+/db84978zMvSfd8QTbOGFjxjknjHEgZ6GMAijn3DlVV70/mm5JIAmBAAnUvw8+dVXtWntX
      1V47rr22oCiKQpQo0xRxshMQJcpkElWAKNOaqAJEmdZEFSDKtCaqAFGmNVEFiDKtOUkB+jqa
      2LjhBd7+YDN++cyE1pSU4h3pgrefXYcqT0OSwp6vP+WFl16hrcceOdvdVMP69esj/zdv28ee
      LV/gPIW03bt2j3qt6FDRkPQX4ZROI5lDcHY3UVLTdGY3n0Wc3U3UNHVHjouKDp2xrF27d52N
      JEXo72ph48sv8tpb79Fjc51V2WG2bdmKfxzhhimAz97BS298wrfue4irVixAVkCWfJQWH6b3
      eEI7OjuPh5bp7OgGyUNHTz+1VeW0dfXhd9nY8umn7Dt0iIaWDmy9HXgkhdqaGmS9mbwZKQD4
      PQ6Ki0vw+IMAOAd6KCo6jN01qDqutkoqe3U8dN+3+PijDyPnk7Jm88QTT2AwmXjiiSe48apC
      +jq7cLntFBeX4A2ENNfj6Ke4pAx/MHScm5sLQGdHJwGvk7rG1ojMw4cOR37XloYUQA4GqCwr
      oba+JZRml42unl6KDxfj9ksRWU11NdS3dABgjE0gPSnupPcCgCJTVV5KV19ImUPvtoiWjp5Q
      ep0DFBUV0WefeKZwdjdT2zyoAIcPhxTA3tdFUVERA05PKP2dHbQ11Y35jLm5eUDo27vtfRSX
      lBGQQ9NHjv5uSsqOEDx+3NPRwuGSMryB0Hdtqa+lrLI6ch3gjbfe5a77H+bGNYU4HQ4ABnra
      KS6rJBBUQJGpriiltbMXAJetF4dHoqG2Br8cOi4prUA6LrOvq42i4lI8/sFSq7uzk56uViqq
      j6EAPR2teKXB8OHfwxTg0M6vufWBRzEbtCSlZ6BXBVn/17/g8Pp5c8MzNPW4+GLr1uOh/Wz9
      Yhs4O/j9v/+J1h4Hr254hRMLzvK9X7Bh49+pa+8HnGz9Yi9KwMGzz72Mz+dm/XMvIePjhede
      JhgMcOhwaeReU0ougq2JY8dqmLdwySk+uZuPPvgcr3uATW++S8DRxXMvv4nPbeO5lzYBsPWL
      UNo3f/gWG155PaIYAB5HH4cOHeLQoUORzHy0soQeu4ejRV/xddFR+hrLeeaVd/H5XPzpqaeR
      gdc3PENNUxf7trzL9pI6/H2NbCuqGfG9vL3pRdr7XXz8xss09rp5feNLOLwSxQcPEgBeeuE5
      pGCQQ0OUcSLU11ZFnskTCJ3bt28vwWCQl17YQBB4//UNlNY0UblvC59uLxnxGcPf/IsP3+aD
      z7/BPdDKm+9uxdFVx8tvfoLb1slLm97B19fIy29/TsDjoLS8msbS7Xy+rxpHbxvVDW2RdMVo
      4bPPv0DWxTIrI5X22iJefW8rXkcPja3dvPHKepp7HOz49E32VjTRWL6X5zZspKyuHU9/Cy9u
      eh+Ps5cXXnkD2dnBC699iORzUVx6ZPDhJRf7DpXTUVfKxrc/J2Br5rNtoff60Sefo1ELwIk1
      gDeAwaCNHAd667HkX8rqVYU8/vCd7DlQykisuPI61lx+KTlpSYimWLIzMlm8bBmzMlIBWH7F
      DdxwVWEksraqw7QNeCgpKaO9towOt5a0FDP79u3HaLFG5Pa0NWKJj+eTLw+yICuG7fvLx/jc
      Ru5+4B5WXXYVejxUHd7LgMdPSVkltWUVuIeE9PiCPPzYY8zJyRxDHqgEhcryEpo7e6ivawRg
      9VVrKVy1mlU5cXS4IXFGHmvXXM79j36f5rKDo74XiQAlxWXUHinD67Gzv6iS/JxZFB3cj1tR
      owYy01LYv28fGqNlzHSdMUoQt32Aw4cP01pThwOISZzBjWvXcMf9j9LXXDbiM0YwWnngnru4
      7Ko14LFxeO9OPH4fZZU1lFWUozUnYhZc7D9UgjUhkcT0HFydxyg5Ukdi/OB3ffDx/0Hh/Gze
      e/U5th2qZse+Sh7//kOsuuxK8rLiCIgW1l61mvsfeZy64j0AzF9+BbfdcBU1h3bh8PkpLa+i
      orwc2WAlXhtg/8EiYuMTBtOqNnHTTTdw7U13Irq7SSsopKeuiKC7G7U5BVU42ND3s2jZEj7Y
      vJXv3XM9iiyjiknA1VMMQEtjA7HxGfR0HyUIKD4PgVH6CIIYRAoooAlpWWJi4rDr5rg4lq68
      kntvLETyeVFUErfd9z0MWhXPPf88hYtmA7Dty11cu+5RpNYy/vlf1/PXp34/7m8dF2dl5ZVz
      uLFwNj6vF83Q+K2J6FTCsPAGczzLli0DoKMyVFLsPFDBD37wA9zdtby9bWi7XqGxy0GhfvBM
      b3M1Gmv6GClSM3POQh77/vcRUPB6fSgKrLjqRrZ/+ArVnR6uu+0+9AYtzz/3PFcWLprwCEV2
      /hyWLZsHQHHxIdztR/DGzeWJ+1bw+tPPDAvr7G1G1liHnDn5GU8kzmrlyjk3UDg7Ba/XiyTD
      9370JColwPMb/s5D6+7jyZ/8hIC7l7+/u5lHHvw2AA6HnczcOTz6WDob3/ycWRY1jZ02ZqfG
      oigqvD4XCuDqbUHWxQLBSB6yWq1cds2lrFmchdfrBQkefuIfUQtBnn/xFeblfG9YGoM+J25J
      AQQWz4zjhU0fsfbO+yPXhylAwsxFLGho4+lnnkVAw4Pf/x5Lsy0888yz6GOTeej+a2iKsfG3
      vz6NNc5KUko6qPWkxIdKrKSUFESg8KpLefVvf2bpZVcTF5+CXj0YXXJKPJaMBVgOvMazzxaj
      0sbw4IPf5p1NG3EHZLLmLI2k5+rrr2LTM39Bqzfx3XvWsr+4mtVLCyLXU1KSI7/jU5IjD5Oc
      kkLGgtUceG0jzxZ/jTYmiYfX3RUJP/S+MKlpqUNkpaEVYdHsDJ55dj3JSbGkJuUDHr7+7F1q
      9htYWHg1RhG6m4/y/HPrUTQmHnrwO4j2JpLiVCO8F4Erls/jb397GrVKxdpbv01r+U6ONHag
      MSRwWbKWDza9TK87QHLWnAlnfq3JQnzQNPh8qWkYU/PxfvICL7xQhqzoUAOO7mZeeP45AoqG
      7zz0IO66fSc9Y+S9JacclyaSkpLEgtWX8trGlyn+WiYmKZNvX7uMjRveR1YUlq5ei62jgfc/
      344iK6y9/Z5IWr78+G067QEEUc3td99Pillk08aNfBNQuOqGu7j2sqU8/bdnEDV6HvzuQ/RW
      70d1PBPlr7iWw6++zLN7JfTWNB645TI2vvIKkiyzYMVVkThmzkxm0wvP4/VJ3Hn/gwCsuOYm
      Pv63P5GTaIyEE6LGcOOno3IXFZ50rl2WHTm3aeMm1j20bhJTNTE2bdrIunUPRY5HesaLgaDP
      xTdbP0WyzuWG1Qsi56MKcBr4XTZcspY4syFyrrOjk5TUlDHumtp0dnaQkjJY+430jBcDst/F
      kfpO5hfkDDsfVYAo05roTHCUac0wBfC7bKFx46IiBpwjzuWOSGlpybDjykO76B//7VGiTBrD
      FKCvsZw9ZY0oQYlXnv6/NPW6R7tvGGVlw+cH5i1bTdwYw2dRokwV1CeeyM6fw/IV80jWuqlp
      6ETv8vPup9+gyH7mLruGNQVG/sfvN7BodgadA35+88t/iNz78ZsvM3v1rTTv+ZT5tz7EsS83
      sqfBj0XlQ5+YzcN338jrLz1Nn1fE1dPI3U/+gWzriSmIEuX8cVIf4OvP3mP9+vW8v7OayxbN
      Ij55BjOS41CpdRQXHwBgxVXX8/3vP05BihU/EPA4+fjd10iedxWzZyQMk/ftdY/xxA9/jODr
      w91+BE1GIT/+0Q+57JJ55+UBo0QZi5NqgKtvuhOruxa3MQujRuCdt99l+TW3cltKPJs2bRxV
      kCLLeHxjN/xFjQafJ2TgFAwGJ5j0KFEmzoijQKuvu4PYQDvvf7GTrPQkPnz7DV5+ZSO9o9gI
      awwx3Hb3OvzNRRyqGt0UWJ+YjzXQyDPrn2PXwbHseqJMNWT5DG3jpzjneR7AT2NDN5mZKWx4
      5i/c+fhPidOe+q4ok08wGESlUp064AXGSU2gc4tIfVURW77oZPk1t0czf5RJJzoTHGVcRGuA
      KBc1Az2ddPYOIIsa5ubnIHttlB1tIykpifSUxFMLuEAZpgA+n2+y0hHlLCCKIhqN5tQBR8Ca
      mEKMUUtNW2hldU9rMz60xMVd3BM1w5pAPp8PnU43memJMgEm+v0qSkuZs3AR4bVCihzkcEkZ
      SxYvIhgMIgjC2AIuQKJNoCghFAm9KRaVAM3NzViMOtp7+rFY4xFFEUVRLso+QLQGuIg4l98v
      2gmOEmWceP1+Nnz8FQCP3HoNeu3UHe+OKkCUCTEwMEBxcfGwc5v3HmbT5m0ANNQc4cZVS4dd
      X7NmzflK3imJLoiJMq2J9gEuIqZKH+BCagJFFeAiYqzv19dvQ6vVEGMyjnj9VFysneBoE2ga
      0Nndy1c79/HU+ldxuT2TnZwpRVQBpgFd3b1s33OIJx6+B5Px4nJ3MlGiTaCLiNG+X0dXD6Io
      kpwYP+q9YVsgh9vP8qUL8dh6qGnuwGyJJycr/aJtAkWHQacBqcmnNmazJqagVgJ0mZMAqGvp
      YOGCBVRWVCDLqciyzMVoOBxVgGnC15+9R69swqQSuOnG60YMc6ytl8WLM4CQX+OQr37lojaF
      iPYBpgmVtfWog27qmttGDqBIpKbOAEK2QHmz8zhWXUlyetZ5TOX5J9oHuIgY6/uVlxzC44d5
      Cxdh0p++yfTF2geI1gDThH3bvqTH7qSxuWWykzKliCrANKHwsss4dqQcWYh2+4YSVYBpwjd7
      ivjuw9/hmy+3THZSphRRBZgmLMzP4v33P2ThkpWTnZQpRVQBpglOWctDDz+Eq6/11IGnEVEF
      mCbYOhp4deOr2PwX30jORIgqwDTgSNF+bnngUVRKgKyMGZOdnLNCV7+NktoGgsGJuWyMKsA0
      YF9RCTV7N5M0fw3lh3eNGMbW00ZpeSWdPf0AuDuPsevwEdo6e85nUsdFV7+Nu371R+777b/z
      13c+nZCs6JjYNOD2W9by1f5q7rw8FYtw6YhhGlvaMBgt9A8MkJIYhySasBoCuFxuZFmeVFug
      bdu20dXVFTnusztRDXSQgUTxnp28FnQMC79mzRqSkpLGJTs6E3wRcarvJ8tBEETEEfz7NB89
      giF5Ji31tWTPmgWyhD4mlsrycpYuXTKlZoKDQZm/vvMppWXl/OKxB5k7K+OMZUUV4CJirO/3
      wosvEvTYkI3J/PDRkfY1VmhtasCanIHkc2Mxm6ivbyAtcxYGrXpKKUCYiooK5s+fPyEZ0SbQ
      NCHZrEGbvZyAe7R93wRmZB3fHFsfC0BObt75SdwkElWAaUJm3kIC7j6UuMzJTsqUIqoA04Qd
      279EY0pApI6VS6L7s4W5aBRg6AjFxejEdaJcUbgMKSYVMRCY7KRMKS6IeYBgMDjqpnqKoiBJ
      Ejabjf7+fhwOR3QDvhHYcbAcJDf7D+yd7KRMKaZ0DdDV1cXzbzxPRWsFXtHL2vlrufeme0mI
      H9yK1e12D9vXQJIknE4nJpMJtXpKP9555YYrVrD9YDFXrr1lspMypZiyOWTfwX18vO1jvuj+
      AgUFSZZ4oewFuj3d/PbR36IoCsFgkMAJVbpKpYqsYY0yyCebP2dm/gJ6erogJ32ykzNlmHIK
      oCgKH27+kOe2Pke/uj+U+UUJrawlmWTuv+Z+bDYbgiAgCAKiKEa28BRFEUEQIiV/IBBAFMUJ
      jV87HA76B/rRqDWkpaWdlWecDHRaLYFAAEkapSkpB6ipPoo1KZWUxDjkgJeq2mMkpmSQnBB7
      nlM7NlIwyFNvfEx5RQU//56ZBblnvm55yvUB9h7aS0NbA3pFjy6oI0VKQVAENGi4ZcktZKSG
      Zv0URUGWZSRpcO/i8LHH48HtduN0Os94f1uPx0N/fz8bN23kyJEj9PQN2sQoikJvb2jD766u
      Lg6UHuBY07EJPPW5ZWBggLvuW8eqVauYl589Ypi6mmpEjRbjcdeJtbW15BbMo6u9+XwmdVzs
      La/h2fe3UFxbz//30lsTkjWlagBJkti+dzt7+/ayMnMlPfYeGrwNoEBuTC733HQPXu/Yu9GH
      CQaDGI3GMfsBYfsWURwsBwRBwOv18qe//olVK1fhdrupb65n/rzhM44WiwWApKQkXt/+Orkp
      ueRm5Z7+Q58H+vr6cPS0UlrTzJKVl5KadLKDLJfHS/78ORypKOeSpUsIKiIalQCCMOm2QCdi
      MRpQiSLIkBAbM6wQPF2mjAIEAgEqqypxy246XB2U2kvxqDx0K91kiVn8wx3/gMVswWazjUue
      KIpotdoRh0RlWcbn86EoCj6fD6PROMyEQK/X8+SPnkSv17Nk0RKCcnBYx7unt4ekxJCxldvt
      xtZk46DzIMtmLyM1JXWCb+Lsk5OTw1Pvv8WKwkJ27trHwtkn1wKzc7OpqanBbI2nubmZnMwU
      ysrLscQmTDm/QLkZqWSmJNLT3soVS+ZPaLBj0ptAvX29+P1+/ud//U/cPje3XHoL1qAVP350
      kg5j0MhdS+9i6fyluFyuccvVarXDSvYT8Xg8BAIBLBYL2hHcd5tMJlQqFVardVjmByKZPxzu
      iQefYGbKTDa+t5GjjUfHncbziUaEppZOWuvK+Wr3oZOu6y0JLFowj/zsLDIzM9FbElm8YAHZ
      mVOv33O4uo6G9i4UFN7bNrFh3Uk1husf6OfPL/2Zh+56iOKKYvZX7MdoMDInaw4VFRXs7t2N
      T+3jP+/5T/Jy805rp8KYmJgRMzaE2vBerxdFUVCr1aOGOx0CgQBvbXmLvLQ8VixdMSmTcWN9
      v6baCnYXVXL1dTeSEm8+bdmTaQy3YcMGGhoaIsdHGlr48kApGoLoTTF89+arh4V/5JFHmDVr
      1rhkT1oTqKSqhMOVh1myYAnx1niyZ2Rz49U38srrr5CZmsmOyh0YFAPX5lzL8mXL8fv9uN3u
      cXdqfT7fqBlbEITIxxxv9akoCt093SQnJUfk63Q6+vv7sVhCTbO01DRKa0tZNG8Rer3+lPLO
      p5J89Pk3PP79h3l2w5s8+cPHzlu8Z4Pcb91HbGDwuyd29WKprQfAqNexeNnCYeFNsWO/+6FM
      ShPIbrfz0psvcazyGCajidc/eJ2q6ir+6V/+Caffyab3NrFi9gpuXnAziXEhx65qtRqVSjXu
      GupUpbpGo0Gj0YzZTApzpPYIb37xJkW1RZFzkiQhSRJxcXGUlpfyzofvUNRVRJ+5j//++L+p
      qKo4SU4wGKS4vJje3t5xd+bPFqnxRt774FMEyTNiE+hCQqMZLLQ0E5zsnJQawGKx8Jsf/IZX
      3n6FVz95FUVUuPfye4lPiqenvwe3yc32qu0csx3jf931v4BQp9ZsDlXd4ZGasQgEAqN2gsMy
      xkNZVRlbKrdw57I7yZmZEznvcDrweDxsLd5KY6ARVY4KQRRQoUI0iDhdzpNkHT16lI9KP8Ja
      ZSXTmMnlKy8nMfHUnpvPBiajkYaObuJnzOaay5adlzjPFaohhZZqHAXYWEyKAmzZsYWtFVu5
      /dLbuV5/PQW5BSiKgsViobmjGUVQ0Kv1GAwGskZwzqrX68dUgHDzYqJNDEmS2FGygxsW3hDJ
      /OEuk0pU8cGHH9Cb2YvaNPgag74g8jEZcYWIxxPajUWtVqPRhCbS7l1+L4mJiZiMpvPa32rp
      dTI7L48jx5rOW5znitgYI/GxZhwuD1lp41v6OBqTogCVbZXsaNxBQ0MD919xPx9//TEFWQW8
      vedtjIqRwqWFfLj3Q1xBFwmfJ/CvP/lXMjMG7djDmXuscWmDYeI7obR1tKHWqJk/NzQHUFFV
      QVNbE7GGWIqbinFlu07qGAZ6A2gztWxt3cqutl2YRTN9Uh/fvey7JCcl09zazDe7v+HGq288
      b32AYFDi3nvuwWXrpWBR4XmJ82yyt6GV6oHBEUApGOTAkaM43B7qvX5mnLDxx7wluSRpY8Yl
      e8J9gLrGupPOuVwuAtLoZreCInBrzq04FAd/2PEHvmn6BtEoUji3kERzIitnr8QpO3GKTrrl
      bv686c+0dQx36z3WiMTplv7hkvpESqtKSU5Kjsiq7KzkWPcxPtv+Ge6gG9lzcodcn65HNIto
      rVqCsUEGzAMoJoXismK2H9zOnpo91Jvr+dNnf+JY47HIaNRQgsHgaQ35noqasiJe+Mv/4fXP
      dnGsofGsyZ0sbE43fXYHAUmiqaN7QrJUv/vd734XPggGg6c9qSBJEiajKXK8o2gHv37117yz
      8x06OjvwurxoRA0xphgcDgdbvt7CijkrWHvpWo5UHsHpdtIr9mLvt/Pw1Q/z9bGvSTOn4Xa7
      6XX0olFpqPRWcnTvUZYuWIrZbEY4Pjs52gygTqdDrVafUglqa2tZv3E9G97aQNAfZG7B3GH3
      pCen09PZg8PmIC4ujs9LPsfj9KDP1yOYQzWQqDl1GSKqRFpdrXSIHfgMvpC9kklNeWs5e6r3
      IHgFEiwJdHV10dbRhhSQ0Bv0aDWnNzw72vfTaLW4+9pJyFvBwrwMYkwn147unhZK69oRBZEY
      k4GArZ1D1S0IgoA5xnjSjPn5ZHdHH73ewQLV4/PT0h0yRTHodGSesAPO6tR4EvXje3cTbgL1
      2/ojE0N7S/byvz//3/QrId8yb1S/wRvVb2BxWphlnUV1XzUOwYFZMaPT6ygwF2BRW0iQErD6
      rOzYs4N4dzyvffUad19+N+397ay7Yh0vff0SR6QjHDt6jPS0kCVjOIOfWHqGZ4BP9bEOHjzI
      i6+9SFOwCa/KS2lfKb0f93LbitsIBoPY7XYcDgd6rZ4dNTv4uuFrRI+IVqfF2eLEnG9G1I4/
      Q2jMJ/vkV8eEXv/O1p3saNmBxqVBjpcRZZF1l6wbVrBMBKdtgIRZiwAnfQO2EU0h7A4vWrUC
      QuiZ7HYPWo2AIIiTbgohywqyMljbWkwGYmNMOFxuMpMThl2DUEEwXvOICSvA3ta9FB8t5toV
      1zIjcQYGyUA//TCk8JWQ2DewL9LgGhAGwA+OPgdZxizkPpkSbwmtra3YXXa6VF28vud1BK3A
      0iVL6Rro4unDT/Mf7/8HGo2GVatWEQgECAaDwzK6yWQa96TWnoN7qFJVgQA2tQ1JlrDpbLx2
      8DUWmhfS2NnIQPwACCAmheIIqAKou9WoY89u10ljOa4csaAi1LTz+M/edqYZ2flkZOePGSYp
      K5tUlYqyslJSE61Y02eSoFJRWlZGWnL8pJpCiKKAKAx+Z78s4fX5kRUFl9c37BqEmsfjbclM
      +EsaHAbqg/XsPLyT0qOliLI4rp6FKIq4ZTdVrirUOjVBOciAewBUoJN16GU9d666E7VaTZe3
      iwAB8g35NHU0sYpVwz6GIAjo9frIsOfefXv5fP/nHO07yp9/8mesVuuwuPv6+thxZAf2GDuX
      x13OwZ6D+GU/cX1x6LQ6DvUeQpuqRTzhQUStSDAhiMFybrcalQMTc/d3JrhsfbR395KclkVz
      czNxZiMtnT0kpUw9V4oeXwDf8XUgNtdoXi7Gx4QV4J5b7uFo3VG6u7t58KYHefm9l2lxnHoX
      kvCMriAIBBluo55qTGVZ1jIO1R/CYDCQEZOBVbbS6m3lpmtvAhg2iaXVaoeN+syaOYueHT0s
      L1iOyTS8GeHz+djw9w30anqJVcWSHpuOr8eHy+vCnmLH4/JgmDFyBldpVTBxq4lT4u/1ExcT
      d+4jGoIlPglLfHhIMVRgzLEmjH7DJBIbYyQvIw2by01B1sQUdMIKIMsyeTl5ZMzIYH/Jfr60
      fRmpAXSSDr/KH2oOjdF8DLctBUFAo2j41a2/onBZIdW11RRXFlPaU8pvbvkNFUcqiIkJDW+J
      ooher8fj8Zw0np6amsqff/nnEeN6+oWnebP+TXQqHT+54ie8secNZORQ59cKBut53kjaA4pb
      wefwoZ+lR+1VUzircNI6nBcUZ6FLMmEFEMXQhI9arUaHjiX6JRz2HWaGegb5qnwKCgo41naM
      3cd206/pJygOL+2HdqwURWF+4nwKl4XGqmfnzaapvYkte7fQ1dvFY9c9hs1mizRpDAZDxERi
      LBRFobW1FVEU6XH2oFE0KIJCeV05883zSRPSSMlKmeirGDf+AT/4Q6ND1+Rcg9fvpfRYKQW6
      ArJmZDE7d/Z5S8uFiM3p5mhLe+hAgJVzx+7fjMWEh0Eh1ByRJImZM2eyfPZyhE4BnVvH7375
      O5bOX8qalWsw+8zU1dZh04xtz9/n6qPAVEBWRhaCIFBbV8s3R7+hz9fHofpD+Hp9rFi0Ahg0
      ajvVcOfu3bt5e8vb3HrdrcRaYkkOJnOo7xC3596OxWhB0ShoMk5/58QzweKz8Piax7l60dXM
      SZqDjMzXTV+zOms1l6+4/CTT69PhTL/feJhKw6CyLNPQEXKWG2eOITVheHPxdIZBz9oTqdVq
      /H4/xcXFFGQW8Msf/HLYx7j1lltZkboCU2DsoT2/4OenH/yUn//t5+wr3kddQx0o4MVLq7eV
      zZWbqa6tHne6FEWhp7+HzoFOnE4ni+cupqqqilvSbmHJ4iWUtJTgwYOjxTGmnKA3iKPNgeSW
      UOQzq3sDPQFuKLgBvV6PIAgkJiZS1FiEpISM6tyjui2MMhTnEDMY5yiTmONlwsVFMBikvb0d
      QRTo7+vnqiuvGtEITa1Wc8UVV9D9VTc73TuRhdFHOhRBYVvzNto+aGNO2hyCwmCzqTnYzK9f
      /jUv/uJF4uJO3VHs6enhre1vMXPWTD7c9yG+Th+tca04vU42VW1CjBEJJgYJ9AcweAxojJqI
      LZEiKyCAvcGOS+1CHafG3mpHpahIyUlBUA8+oxyQQQw1a8JIHokYdwxujRvRIiKYBDZt28SK
      9BWsvXYtAHpRz/L45eTm5J7x+uWLnZrNH1JUVRs5dnt9OI9PhEk6LUVF24eFd8K7rOQAACAA
      SURBVPz6Z2AdXzNywgtievt6UWRl3FaNe/fu5Y+v/5EmXcgoa6iiKCihjo0QOUGMEoNTDFlW
      5hhyMAgGZupn8ui3HyU399RrcN1uNz09PXz0xUe0e9upaazBMcOB1WYlIzeDWGK5cc6NCCqB
      9oF2qh3VCFYBW7MNZ8CJGjVBfxB1xmBZoSgKSreCXqvHYrCQqEpElmTS49Ops9VhE21ofVr8
      Pj8rL1nJ0Zqj2GPsiGoRpU9hhjyDB+56AEVR2H9gP8uXLT8rY+znckHTVPIO/dGOA/zyzxsw
      4ScxdQZbnvrdGcuacA1wum3WwsJC7jp2F29WvBkaITpOWBEUWSHGH8OytGV83P5xJPMnBZIw
      SAZ+vu7n7CjbwTufvMM//49/PmV8RqORrKws4uLj2NKyBTFeJKYzBpffRYo9hfjYeGpaapiX
      M49VC1YxsHeALrrw+/2IOhHBKqA+4TUJggDxoO5Vk5OQw5rlayIuWVYpq+jp6SEQCLCrbBcq
      tYrZc2dTU1lDj7eHvJQ8tLZQ+9Rms7F0ydIpk7EuFPIy09CoVBCEedkTc/Z73q1BBUHAkGSg
      39g/4jVFUfDoPNT01bDUsJQSbwkG2YBGoyFOE0dZRRk/vP+Hp5Vp+vr7WFO4hnfq3kElqZiR
      PQNzpxnFp6A2qRF0Aka9Ea1WS4/Ug6IozE6aTdAVpKy+DEWnoLPqUBlVkeZRTF8MV1x+BW67
      m91Fu1m5aCU6nS5kiCcKHO04Snp+ekSxDXoDeknPZbmXsfPgTqqqqsjIyDgryzHPBgPNNdQM
      KGSlJpGaFE9vWyPNfQ5UKh0LJzDKci5IsJgx6HUEXR4ykic2VzEp5tCe4OgdF0EQUAQFu9qO
      w+8gThOHW+3moRUPcdf1d6HRnP5ozVOvPkWNuoZZ2ln87P6fsWv/LtrMbYjdIoH+AImpiTg9
      TkqPlnLpjEspOlKECxdZ6Vlo27UoKoWBzgGMshGzbEYtqpk1exaCIGCKNUEsfHX4q9AaBp0B
      d9BNXGYcgiDg8/hwdbvIseRw47IbKSsrwxxnJjs7e0ptRiJrYzBr7DhdbkiKp73fwZIFCyiv
      qJh0W6ATqWpswe5yYwIOHjl64blFyU/LRx1UI6lOTnj4JXepusAAGknDY3Me475b7julXEmS
      sNvtGAyGyMywoigosoKkl1iZtpKE+AQWFCxAU6chPTud3Jxcth/cTrmjHL/XjyXBgqSVSNYm
      syB3Ac3OZkSrSGtjKyaviczYTCw5FmJP8JaWljfoPUFPaE1q99Fu1H41ycnJLFu8DFEUabG1
      cF3hdVMq8wOIGh15ebmUl1dis5mx6tX02F0Eg8qku0X55ptv6O4eNHuub+skBRcqFKTuZt57
      771h4a+66iqSk5PHJXvSvEL809/+id19u08ZziSZeOr+p5gzZ864ZZ/YYTtccpjS6lJ8MT4G
      PAPcMucWEhISSE1NRZZl+vv7eX3b63R7urk06VIyMzKJjY3FYDAQDAapra/FFXCRk5rDVwe/
      QggKZF+SjVpzcvkxdFbb3m1nZc5K3tryFjPjZlLVUEXQFOTXj/x63M9yOkzk+8nBAA31jaTP
      zMbndhIba6GlsYHE9Cz0GtWU6gQ73R5+8MdnqG1p47eP3M0dV575Ip9JUwC3280fn/8jFV0V
      OHDg1XgJqkLDnaIshmZrUXjmoWcoyCk4ozi8Xi+iKLK3dC/tve10aDtQ69ToWnWorWqWz1jO
      /ub93LLkFhxeB29//DaCWuC2Nbdh1BkxGo2oVCo8Hg8ajYa9JXvxm/1kCpm0+FpIyhi+HO/E
      JkLAH8DitDA7fzZ/f+Pv3H3X3STEJ5yzyarpMgoEoVVhvoCEST+x5500tyh6vZ5vX/NtHB86
      OCAdQBvQYvQZebDwQeZkzmFm5kze+PwNLEbLGcmXZZnmlmYaGhqo7KxEmCGgNYQ6nO1SO3qd
      nk87PwUdtLS2kD0rm4SEBLY6tnJk2xEy5Ax+du/PQAGny8muyl0kzkwk3htPbl4uMZ0x1NfX
      0+voxaw3IyOTlD9cIeSgjMFgQKvVcv8995OQkICiKAQCgTPqy0QZRK1SoT4LCnlWTCHOBEEQ
      SE1OBQ8YFSNH3EcQEPjFHb+gYHYBJpOJmWkzUavVGI3GM5Ifa4nFaDCSHp9OZ18nQV3IsZbP
      7iMYCCKqRQRRIEeXQ5w1juz0bHYf241T5aRX1UtraStHqo+wcM5CdGod3a3dzJs1D71ej8lk
      Ij0pHYvOQkp8Ch6XB9Es4na40eq1+Dw++uv7sZqtxJhisFqtkbZ0eMh0aHPpbHCxmkKcS866
      AsiyzNGjR0EAo+HUGTc3J5fCeYV8uvdTXIKLa/OvpbGjkeLKYhbPXYxGE5qZbWxqJM56eibC
      drsdRVEw6A3MTptNT2sPdrudK2ZdQWFWIWmqNLq7usmyZmE0GBFFEaNipKyvDIAeTw/Huo6x
      NHspq5auYl7ePLRaLZIkIcsyarWaGTNmRDzNVR2uoqujC2wwf8Z8Ll1+KWpVqBMczjxD1yuf
      Dc8VQ4kqwOlzTvoAYdflp9NmrG+u582db1LbWIvX4eWX9/6S2fmzsdvtxMbGUldXh8ViITNz
      /BMfAwMDERfpOp0uso7YaDRGnnXoM0uShEar4d2v38VitpASk4Jf8HPdqusiMn0+H3a7HbVa
      TWxsLKIoEggEeO/r9/is8jMW6RZx89qbyc3OpbOzk4amBlZfunr8L28CnOs+wOlwJp7vZFk+
      LSU73ThGkn9OiouhrgfHS3ZmNr964FcAHC49THF1Mc29zdx2zW10dnXi9rjJzs6mr6+P+PiT
      17SOhMvlwuVyYTQasdvt+P1+ylvL0Wl16NCxbN4y/H4/anVoI2iPx4NO0nHdsusQRRGdTnfS
      cFrYzslkMkVepkajYU7GHJpamrBqrDg8DtRqNbIs8+UXX5KXk0dKyvkztz4XhDcjuZDjGEn+
      lN0p3uEIjcro1Dq2tm7FPmAnoAtgla2s/+X6caVTlmVaWlpwOBxotVra2tvotnQj+SWSPcnk
      zMyJTKKo1WokScJsNlNztIYuWxeXzLuE7FknuxIPjy4NncXdvW838dZ4+vr6KFxZiCAIHD58
      mOrqamZkzOCqK686ey9nFKbS9zsRt9t9Rn25cx3HpHWCT4VOp2PpwqXIgszm9s0IWgHBJhCU
      g9h77BypPkJ6cvqYnhMEQcBsNqPT6TCbzaQkp2DvspOsSiYtOS3yvOH9xsJNpAHnADqtjksW
      XzKi3LBHinD163a7Ka4oZmfxTq6/8np8Ph+fffUZ7R3tXH3l1ajVapKSJubBbDycj+9XVbaf
      HpeAWadC0GjwuJwEvE7au204WispabRhjTXhdQygiCKNDc1YrFaaGhpCm5YYdNQfq0NvsqBR
      n1za+119FJXV4JeCxOhUtHb2EWvS0Nndi9sfpPbgPjoksOi1DNhsiHKA5rZurNZY6hsaSExI
      wN7fQ2efnVjLyc6xig7sxu50o4+JpbutaWoqQG9vL0ajkUAgwF/e+wturxulX8EddNOv7aet
      v419nfvobe8lLjYODZpRPcGFF8zrdDr0ej2zZsxCJapwOp1otVr0ej1qtToyNOn1ekENhUsL
      T+l8K4xGo6G9vZ02RxtGwcjX+7/Gprdh0Vioraqlt7cXj9uDw+HA6/diMYeGds+2h+hz//2C
      9Nl8KJIHxe5ETEygsaaars5O4pNSsGiCaBJzsbXV4pM1mA0aBvq6aOt2oFWB1+clzmKmv7+f
      +qY2MmacvJlIXU0d+YsXkmS1UFFxhJQYka4+O21OEdnZS4zWQMac2TRUliLqLWhFha6WWhxC
      PErASWJCAk6HjfojpRjT8jCe8Dra25rR6oxY4+Jw2vonf4OMkUhICBk42ew2fEEfWZlZeINe
      7EY7skqmW+zGp/GxuXMzT772JPf+5V7+8s5fTtoxcjSsVmto/fHxEaYwBoOB1NRUVixecdrj
      9FdfeTXXrbiOqoYqLl96OUviljAzZSZx1jiWXbIMSZLYdXAX7+15j46OjshI0lSxrxkPA21N
      OPwSfT29+FHwe3043T7yZs+huaaGoFpDwO9DUenJnZVBXV0DMzJnoRqyDLa54RjxaTPQaUKF
      i81mw+d24D3uCSMlyUxjcycejwenrZeWXgc6UcESG4tKVKFWg88noTWYyUpPpqGplVmzMgn6
      By2LW9q7mJkej98fwOZwD9tVyGxNoKCgAJ2/B7sSMzVrgDBGoxG7x05TbxNtvW3ogjr8av+w
      MLIgI4kSnf2dfHvVt8eV/vA6Yo/Hg8/nw+fzUd1cjVkf8j4d3v8LQv2I8ZTSgiCQnpJORmoG
      3X3d2Afs+H1+3C43cfFxJCYmcvmqy3F1ucjMyEQQhEgf4mzNB5zr7xcUtczMSCc9NQm9NY7e
      9nayZmUhSH7UMXEkp8zA3dtGUmoaOq2GuNgYugdcZKQmY7FYsFgsJCYl09nRTVZWBlqNBp/P
      h1olgEqLWiWgi4lF9Dlw+mTycmbi8slkZMzApNdhMRuJT0uls6WNtLRUNBoNMUYdroCK5EQr
      sWYTGo0GvUZE0cUSZzEgSTIocmS/BsnnobWtA0P8DARP39TtBIcZGBjgv7b9F74+Hx6th+7m
      bpqDzcMcb4myyB9u/gOrLxnfcKOiKPT19eHz+ThYchCv2ovX48Xb4yUlPYU7bryDQCAQ2XN4
      IkiSRG19Les/XI+IyO//8fdsfHcj33/g+8PSAxNXgKn4/aY6U7IJNBSr1coDCx9AG9Aixogk
      5yWTyvC2o1pWM3fW3HHLVBQFt9uNJEno9Dr0aj2pxlTiEuPImZlDIBCgv//k9Qpnwhub3+Dx
      Vx5nj20PB2wH+LcN/8aGyg00NQ+6KT9xQuxCahZd6Ex5BQCYmzOXBWkLCLQGCLYFMQaNEZ8w
      giKwNGXpuOcGIOTKxWq1olarmZc3j0XZi7DGWklJTGHh3IVIkoRarUYUxYj35tOdCDpccZh/
      eOof+Ov+vxIQAyiCgk/w8Xnb5wTEAL997bc4nYObaCiKctZNI6KcmgtCAQBa7C20udtoVVqJ
      SY4h0ZuIRbTw7zf/O//68L+etjydTnd853QpsuNMrDlk4y+KYmQ8OezB4XQn9p7/4nkO9h4c
      tqB/KDWuGv7jjf+IHJ9ts4go4+OCUYCOrg4kg4Skleju6cYtulmcuJhVS1eNy+boRMIjQFqt
      FqfLSXJyMgvnhzZbCw+ZToTctFMv2N9Zt/O0a5YoZ5cLRgFcPheIx80sRBWp+lR+fufPz1ie
      IAgkJCSE9gKOtZKbk3tWp+EL8woRFAFdUMcd+Xfw5KonSdOmoZEHh1cXZy4+qWaJtv/PL1Nn
      zHMMWttb6ZF6IsdJ1iR+cfsvSEqY2OyqyWTCZDKdk+ZHQXYB/3nnfzJn5pyI54wVeSv4r/f+
      i2JXMSiwbvW6k+47XHyYjBkZ417SF2ViXBAK0NLZQlAdairkiDk8sPoBZmXMmrDcc2l4lRif
      SGL8cF9JBfkF/OGJP/DB1x8Qb45n0dxFJ92XnJzMf2/6b37/099H+wTngQuiCdTT2RNaX+A2
      8pPrf0Lhwgtvo7cw8dZ4rl1+LbUNtSdNWtntdp575zmefODJaOY/T1wQCtDe2o4gC1xbcO2I
      1pkXGlmZWfz8e8P7L5Ik8c9/+2fuveFe0lPTz0o83e3NFBWX4j7uWHb3rl2jB5Y8HDp0iEOH
      DlFSMR7fqzKdE9yg7iQUic/ef5PPt+2LnGpvbxvyu/2MRTfVlNDUffLezReEAnQNdCHpJfTa
      iY3MTJSz2UE9sfmlUqn4l0f/hfkF88+K/Mq9W/l052Ekr5OPN38BwGWrx5gpd3bw0bai04jB
      z9Yvtk0skSfQWr6HQMJ8rr9yZeTcp59+HPn9yaefnLHsrNmLyUo62Tr0gugDIIFW0fKtVd+6
      aCeL3B53xGQ6bH80kWd02u2Y49JYumIVK1UhOZs2bWTdd77Dhuef595HHufTt17lhrvXYdaG
      RqLSs3JYtiy8i7yHl595GZ8goLWm8sh9d/DZO69S3+UkIS2HVL2NPXt34fLY+c73HuGjV57B
      FlDhDYj86Eff583X/06aRUOH38yCVA27So6iFuHOdY+RbNYAMq+9OPSeh3j3nU/o1CSjlZ3c
      eNXozdwDO76gqLIOl9PFA4/9mLpdb3GgRUYbsJEwcwH33XYN//Kbn5KZt4DOrn5++NOf0V70
      OZ701cT3HWLDF+VkJOjxqywXhgIsmreIps+aaG5rZl7BvElLx7lUOpPRhCRJiKJ4VjrnK6+/
      E/3+nTz9l/9Las4i7r3t2tAFQcV9d9/OU//n99x0/2ORzA9waOcXrO87RlxaDvfcdi3zF+Rx
      uLKO0tJS+NbldPpj+fGPHjwe2ktLt8C6h+7G0VKKNquQH65dRkvZdnaWNIC7n7RVd7E2N519
      X32MoNGx4tLLj2d+cLSUn3BPO7fedh1thvmsnjdo6nKs4hDr168HoPRoMwA5ebOprmvBO9BG
      cWUDFuCO+75LthU2vPwyAHkLlrFu3UPYGg/z1b5yCoYY915/+32snpfKpk0bLwwFuPnmmzGa
      jLS2tpKfkz9l/Gmebc6mJaeiwKKVV7Bo5RW88uKLDDUU93pdGE0mBmwOYNCj3bLLr+OJu0OK
      0lK+kwavlccef5xNf/87AAKjFQAnnFcAYxzzc0N9mcJrbmXJKic7Nr/NN5KGNUtmjXzPCOTO
      X8Zjjz0BwPMvPA/Aux98xHce+QGB9lJ2tZ3gUv6EZqrP50OrjR1V/gWhAKIocs3V10x2Mi4o
      SvZ+w+7DVajVKnTWVMIFoBL08+4nO/jRT37Guxufpzt/Jknmky1IrckzOPrJO7zUVEZNUwfo
      EkjWDvD0M8+SkJbDvXesxdlby3PPbeCBRx/Gv+UZnnn2IN6AwI9+dAVvVg16/TuwfQtFR+rx
      edzctjpks2XOmH/SPW3FdeN6NrNOxaaNLyN4ekhfdjsA7256AYPiIndRqJ9ztOwA69e7cXoV
      fvzjH1C3b2TZU94cOsr4ma7fb9cnG0lf/RDZQ3bD3bRpI+vWPXTKey+IGiBKlLHIzF+E+YQB
      woULT55kHIkLrgYY6sUhynAuhO831bigclEwGMTr9Ub2Cj7XSJKEoiijrg8Olx2KouDxeBAE
      IZIBFUWJeJwIpx0Y166WUc4fF4wChFdxnY+N5GRZxufzhTxEEFoTIIoiKpUqkqklSYosaBk6
      Qeb1eiN+P8MOt4aGEQQBtVo9zLFWlMnjglCAcIaDiRmwDXVDcpIr80Ag4s7R4Ri+ZapnyFac
      Op0OjUYzbDXXSPEAI+5cEvYObbPZIs61dDpdVBkmiQtCAYLBIE6n84x2KVEUBb/fTzAYJBAI
      RDw0B4PByEqvoQp2KsJeJCZKOA0ejwe/349er0ej0UQV4TwzZRRAlmX8fj8ajWZYJg872g2X
      quHf42lHy7KM2+3GP8RnzNAVWGHZk00wGMTlcqFWqzGbzdE+wnnkvCtAePH3ibYu4cwadmCq
      0YS8vTmdzjPamcTv9+NyuS6oFVbhfQOinD/OmwKEmxmSJEU6imEHVXq9PpLJw02DYDCIz+eL
      tJkjCT7ul3Msws2KCynzazQaTKbR/ZxOFqfrsvxC45wqQDjThzPzic2PcNPE7/eP+JJHysCS
      JOH3+0e1Bxra5r+QCHufmGpcSIXImXBOFcDn8+F2u08ZLlzijwdFUXA6ncO2Qj0xzgst80N0
      Ym+yOCdv3e/3EwgEhnU+zzYejyeyiQUMTkaFx+4vNMLu2YGIU66pxvMfF1HfPjBhOY/dspSc
      9JG3u3rty/IJywd44NoFo8p/fUgcE1aA8OhFeKIoGAyetwkrl8sVGZJUqVRnZXhysnA4HMOa
      G2azecrtJFnfPkB5fdeE5bi8o3vxfv0cK8CJTFgBwu37ySI8fj/ecfypysXe1p6qTL16NkqU
      80hUAaJMa6IKEGVaE1WAKNOaqAJEGY4i093dc+pwFwlRBYgyjKa6Wo41tUx2Ms4b0enHKBEk
      jw0PRsw6f8RSdqgl7tkaqpXl4Dkfth5N/onzU1EFiBJBCgKSm5bWVnIL5qM/vpVp2FDxbNkq
      iaLqnJt+jCb/xBn2qAJEiaCPiaWgIJaCgoLJTso5I0kcYK6mMXIcVYAo4+a31o0Ekw5MWI5B
      kwuMvAHIb2M3Tlh+iPtHPHuFvpRC62AcE1aA8BrZKGeXqWgMdz6Yq208daCzyFlRgChRLlSi
      TaBpwqYX/4bflIrsdvLYow9PdnKmDNOznp2OKNDdfBSdOWGyUzKliNYA04SlywvJdvmwJqWd
      OvA0IloDTBPik5KZkZ7Crp27Tx14GhGtAaYJlaVFdNs8zMiaNdlJmVJEa4BpwFebP6Db5gUE
      9IbJ3WhwqhFVgGnANTfeQawO+vu76ejsnezkTCmiCjBNaOl1Mjsvj/6upslOypQi2geYBnS2
      t3HvfQ/gd/Yxf+llZyzH3ZiGvzpnwunRuvWjZryA/dx6x5PsJjwtKZHjqAJMA4J+F5s/2Yas
      CGTmLSAlYXwuQ06S4zYgOSa+OYkSHN3Xq/NI7oTlA8SPcl5yxOBtHVSAaBNoGqDRaNGoVSgo
      +AOjOytTAh4qj1Sxa89+Jt9n9vkhWgNMA3z+IGtvvgOzYWy7LUFjIDM1Ho9fRlAUgudqQUxQ
      ji6IiXL+yJg1vna77HdS3djL8iXzgMGFMGd9QYxKnDILYqJNoCiDCGrMBpHq2rpoEyjK9EPU
      6MdcDfb+jddSt3LJhON5IjWZ0bq67914zYTlA/xklPNH8rLZNySOqAJEmVK0paacOtAEcMSY
      hsURbQJFmdZEa4Ao0wqXp5au/k8ix1EFiDJuuvo/pblr4v77ff5sIHGUOD4Z8fzpc9uIZ4Oy
      E1+gI3IcVYAoU4qhmfN8EO0DRJnWRBUgyrQmqgBRpjVRBYgyrYkqQJRh1NVW0dDcNtnJOG8M
      GwVSFOWC3mo0ysTwDzQT0Kcg2VqRM9MvytLx5kSJq+cM5vFhCqDXRxdMT2eCgQBqnQ5ZEJA5
      uXnwkyw/UtzEC0izcXRTu59knbvN1UciOg8QJYIhMQt3STkqQ8ykZYx84/ndLzmqAFEGEdQs
      XDJxa88LCUGJblEeZQSGbpEUXkQSdNehBJ2nuA9OtW5GZcxFUJki8QxdaCM5SicsH0BtXjTk
      nsE4ZF8nsr8zcm2YApSUlrJ40SJKS0tYtGjxmBHUlBSRPv8SYsZZh9SU7OObfaWsWnMDi2Zn
      nXS9sWwPzFjGzHjt+ARGOS8MVYALUf6p4hiWfYsP7kUKBNixez8JJjUfbf6KwuvuomL7e/S6
      BO67cy1vfbKd2IRU8q16LMnVvPjeNizxKVySHcu2/eXccecdfPz+h8xfcQX99YdwqJN46O5b
      qS09yj2PfZe/P7sBU+ASNn+1i+vuuo9t77yOQ4jhukvS8NBAc73E5cvmndMXEmX8nOvMeT42
      AhkrjlGv2F0eLlm5kKrSKgxxaVy/IpvKulbmrVyLOuigr7MLn9fJ/MLr0ATtHCqpoHBxPnXN
      HWg0Kvx+H1qtDr8v3Kt388f/51cUrFyDyyOxcmEupVXHiJ+RT4HVgBN47vmNXLJk7ll+/Chn
      i562ZqrqRtvBJUB9ffOIV2qra/G5HfiC44vH1tNBeeURunoHxhW+pqZ2fIKB6iPlVB2ppKUj
      tBfysBogLSubZcuW0d/Xi8fWT0V9M+kzl1DyzVbau/K4+7ol/OW1d1m4eBHxetDpY4iL0aMk
      p5BgSmd/2TEKVyYhIxCUZXw+L7KsRQHiU2bx/37nu3z69oeo47Q0tXQwc8lMBI2IxqvFYonh
      p//4PfYfKGHNqunVEbtQ6HN6QJbB30tNGwQc7eg0ApIikpSSQE1NDRaNhwPHBihcPJvOzk6C
      igqtAM6udkg30XKsBrsnyNLF80eNp6mjh4ULQr6LmuqP0tHnJNakQRA1BGSRpFg9Lc0tzMrP
      p76xHZ/PR/pALy3tHejNiczKGGNVmVrHnPx8Kioqcfe1ja8TvH37dq688kqc7dXU2C1cUhD1
      MT/tUALs2bkPjUpm5twC+m1q/I528nKyOHa0loSsfHpb28lP09FGGjHeTjocHtwuN3ExMcTr
      FIKx8TTUd+DzuLli9cpRoyorLWH+wsWIgp+De0ux+73MSEuhID8/VJt4HATcfajNWaTPzqO3
      8RgqJCRFwC8LLJw7+rrm6tpaCvLzKCurwOPsH3sYtLm9gQM1+0CAd7e/AQgIAjR2AQjhfyEE
      IfRbCB8OdtVH/B0Of1zm8HOD4YRIJOFwQ/4OuUeIpGfI3+NhIzEJwvHrw+M+KewwmaF7RpIz
      0vUT74+EFUJnRCEieZicEX8f/yuKIimpGWN9qnNOwO1kzrJVxBkUurptKO4OUGvxeDyotEZi
      Y2JwaWXcGLEa1BgNsXQ5PCQlJWExGjCoAaMZs76LWEvSmHHNmZ1LdVUV8UnJWOOM6BULCfEh
      X2/xCfF4nCIurZr0nGxaj1Uh6oxYzTH0DrhISrSOKduoEamuqiYrJx/Z3T92DbB570fc/dcH
      EFTHM5UgIAoigur4hxaPf0RBQFSJkd+CGPpoJ15DAJWoilwTBXEw3PF7ROH4NVEcPD5+TSWo
      IvJExGFhVKIqIi8cNnwcvqYSVagE1bCwKkE17K9aUEfuCctQq9Sh+8NhRHVIznFZakE9KPv4
      uaHn1aI6JFcQ0ag0kXBhOWpRHQmvFtSoVerB36Ial32AjMzs08+1UU7JSTVAZ0sD1S3dXLlq
      xWSkJ8oYVBTvRDTmkp0isq/sGHHxSVjUftp7+sjMW0xGsmWyk3jBcdIoUErGLMz66ATxVGT+
      kgX4HF5K///2zqaniSCM47+ZUiiiSBUUIdhawVYCBNEYRQ96NX4GvfghjIkJR/UTePCgHnxJ
      NGBCJF4U3zFSKK8txQJFaZUCbaki2LLrodBSUFHQgGV/ySQzO5n/TCY7cjUdIwAAAsNJREFU
      u/M8+0zWOUjtsVq+hMbxTYQ5Wnuc4YHetR7ef0k6BvylPdk6mI6pIFRQATWGFtWyMpbM2oeh
      d4TDYYZ9gbUYj8ZPidFh7yMciXLocA09bS0Um0rJ1Ud53WKnqkbbsq6EXxrBHX2tXG++ngi+
      EHOGcIrHRyQ9Gil5ufQ6AqSQ8bIgxTsi5IKyWOQJEfMeE5nML0wIhJDIeS+PFMhFXpSklkzW
      CYFEpmhJ4ka3YE5v3vBHJA30H5UTuvF2UsiEdmpel6if70MKmUzMaS1IKAq7TaX/+FbYmGjB
      cBobGs0GSFMiwUBiG+t0Olet5+7vRwUCgfTaGuvq6urq1noQGn+f7ldN3Hvex5GyXC5cvsGp
      kwe5c/sOeYVmXK3NvHB42FO4hVu37pK7sxj/ex8B3wixb2HaOrqZRUdjQwOF5n1sNui5euUi
      WSXVdLW+xMBX6h8+oWx/KY/qG+hye2h/+4aivTZeNN1nbEbPzLiXB03P2F9ZQcY6fsxqCyBN
      8Q/2EprWEQpNsrVgO5GhHkR+Ce12B8WF+Qx22lE3G/B4J7DazHQ5nAQ+DJOpm8Kv7OBj51Py
      S0qwO/o5UGnFOxrky7gfIQTbjEaUiI+PsSzG/FPMRic4VmWm5W0H7tEoQ+5umJlkelZHeUUF
      +nW8ANbx0DRWy+FD5bzpGSEvU7LbYmHA5WKfzcarZ48ZC02SYdiKQURweT7R3/kae68HAKvV
      isVixuUawGYrm1MTHLDsoHckjKO1hfe+UVRVxZCdTdamHAz6DHK2FxEL+ygyWTAajfi9boJT
      0bWbgN9AM4I1NjTaG0BjQ6N9PkxjrjW2MeiPHyrZsyuPc6drUJQo7e2dCJ2emuqqZRRWxnTz
      JZRAHwCywIrhxPlEv1k5OVTYbD9spyhRxiY+EwwFsZb++Q+5gzdu8s0bP7CTaTJhPHtm2X6/
      A+YwIiDSdSExAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Happiness Scores by World Region' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Six Factors of Happiness &amp; the Happiest Countries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
